<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuke.springboottest.demospringboot.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.xuke.springboottest.demospringboot.model.Employee" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="realName" property="realname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="inputTime" property="inputtime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="dept_id" property="deptId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, realName, password, username, tel, email, inputTime, state, role_id, dept_id
  </sql>

  <select id="getAllEmployee" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_employee
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_employee
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_employee
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.xuke.springboottest.demospringboot.model.Employee" >
    insert into t_employee (id, realName, password, 
      username, tel, email, 
      inputTime, state, role_id, 
      dept_id)
    values (#{id,jdbcType=BIGINT}, #{realname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{inputtime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{roleId,jdbcType=BIGINT}, 
      #{deptId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xuke.springboottest.demospringboot.model.Employee" >
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="realname != null" >
        realName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="inputtime != null" >
        inputTime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="inputtime != null" >
        #{inputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuke.springboottest.demospringboot.model.Employee" >
    update t_employee
    <set >
      <if test="realname != null" >
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="inputtime != null" >
        inputTime = #{inputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuke.springboottest.demospringboot.model.Employee" >
    update t_employee
    set realName = #{realname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      inputTime = #{inputtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=BIGINT},
      dept_id = #{deptId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>